{"ast":null,"code":"var _jsxFileName = \"I:\\\\Web Development\\\\git_upload\\\\authentication\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './Reducer';\nimport { ADD_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'aplication/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; //Delete contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear contact\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["I:/Web Development/git_upload/authentication/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","axios","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './Reducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  UPDATE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filtered: null,\r\n  };\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //Add contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'aplication/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post('/api/contacts', contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (err) {\r\n      dispatch({ type: CONTACT_ERROR, payload: err.response.msg });\r\n    }\r\n  };\r\n  //Delete contact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n  //Set current\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  //Clear contact\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n  //Update contact\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n  //Filter contact\r\n  const filterContacts = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n  //Clear contact\r\n  const clearFilter = () => {\r\n    dispatch({ type: CLEAR_FILTER });\r\n  };\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}