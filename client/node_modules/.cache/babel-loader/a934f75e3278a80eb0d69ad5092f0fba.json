{"ast":null,"code":"var _jsxFileName = \"I:\\\\Web Development\\\\git_upload\\\\authentication\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../../components/layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    filtered,\n    contacts,\n    loading,\n    getContacts\n  } = contactContext;\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add a contact...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contacts !== null && !loading ? /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 1000,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 1000,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contacts, \"TDwhgIW1z1K2LcG8WJHCH34hzH8=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["I:/Web Development/git_upload/authentication/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","ContactContext","ContactItem","CSSTransition","TransitionGroup","Spinner","Contacts","contactContext","filtered","contacts","loading","getContacts","length","map","contact","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,iCAApB;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,cAAc,GAAGR,UAAU,CAACE,cAAD,CAAjC;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA;AAA/B,MAA+CJ,cAArD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACzB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,cACGH,QAAQ,KAAK,IAAb,IAAqB,CAACC,OAAtB,gBACC,QAAC,eAAD;AAAA,gBACGF,QAAQ,KAAK,IAAb,GACGA,QAAQ,CAACK,GAAT,CAAcC,OAAD,iBACX,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,UAAU,EAAC,MAHb;AAAA,+BAKE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AALF,SACOA,OAAO,CAACC,GADf;AAAA;AAAA;AAAA;AAAA,cADF,CADH,GAUGN,QAAQ,CAACI,GAAT,CAAcC,OAAD,iBACX,QAAC,aAAD;AAEE,QAAA,OAAO,EAAE,IAFX;AAGE,QAAA,UAAU,EAAC,MAHb;AAAA,+BAKE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AALF,SACOA,OAAO,CAACC,GADf;AAAA;AAAA;AAAA;AAAA,cADF;AAXN;AAAA;AAAA;AAAA;AAAA,YADD,gBAuBC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAzCD;;GAAMT,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\nimport ContactItem from './ContactItem';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Spinner from '../../components/layout/Spinner';\r\nconst Contacts = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const { filtered, contacts, loading, getContacts } = contactContext;\r\n\r\n  useEffect(() => {\r\n    getContacts();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (contacts.length === 0) {\r\n    return <h4>Please add a contact...</h4>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {contacts !== null && !loading ? (\r\n        <TransitionGroup>\r\n          {filtered !== null\r\n            ? filtered.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={1000}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))\r\n            : contacts.map((contact) => (\r\n                <CSSTransition\r\n                  key={contact._id}\r\n                  timeout={1000}\r\n                  classNames='item'\r\n                >\r\n                  <ContactItem contact={contact} />\r\n                </CSSTransition>\r\n              ))}\r\n        </TransitionGroup>\r\n      ) : (\r\n        <Spinner />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}